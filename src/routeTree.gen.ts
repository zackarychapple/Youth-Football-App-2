/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RosterIndexRouteImport } from './routes/roster/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as OnboardingTeamRouteImport } from './routes/onboarding/team'
import { Route as GamesNewRouteImport } from './routes/games/new'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as GamesGameIdIndexRouteImport } from './routes/games/$gameId/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RosterIndexRoute = RosterIndexRouteImport.update({
  id: '/roster/',
  path: '/roster/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingTeamRoute = OnboardingTeamRouteImport.update({
  id: '/onboarding/team',
  path: '/onboarding/team',
  getParentRoute: () => rootRouteImport,
} as any)
const GamesNewRoute = GamesNewRouteImport.update({
  id: '/games/new',
  path: '/games/new',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const GamesGameIdIndexRoute = GamesGameIdIndexRouteImport.update({
  id: '/games/$gameId/',
  path: '/games/$gameId/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/games/new': typeof GamesNewRoute
  '/onboarding/team': typeof OnboardingTeamRoute
  '/dashboard': typeof DashboardIndexRoute
  '/roster': typeof RosterIndexRoute
  '/games/$gameId': typeof GamesGameIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/games/new': typeof GamesNewRoute
  '/onboarding/team': typeof OnboardingTeamRoute
  '/dashboard': typeof DashboardIndexRoute
  '/roster': typeof RosterIndexRoute
  '/games/$gameId': typeof GamesGameIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/games/new': typeof GamesNewRoute
  '/onboarding/team': typeof OnboardingTeamRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/roster/': typeof RosterIndexRoute
  '/games/$gameId/': typeof GamesGameIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/games/new'
    | '/onboarding/team'
    | '/dashboard'
    | '/roster'
    | '/games/$gameId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/games/new'
    | '/onboarding/team'
    | '/dashboard'
    | '/roster'
    | '/games/$gameId'
  id:
    | '__root__'
    | '/'
    | '/auth/forgot-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/games/new'
    | '/onboarding/team'
    | '/dashboard/'
    | '/roster/'
    | '/games/$gameId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  GamesNewRoute: typeof GamesNewRoute
  OnboardingTeamRoute: typeof OnboardingTeamRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  RosterIndexRoute: typeof RosterIndexRoute
  GamesGameIdIndexRoute: typeof GamesGameIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/roster/': {
      id: '/roster/'
      path: '/roster'
      fullPath: '/roster'
      preLoaderRoute: typeof RosterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/team': {
      id: '/onboarding/team'
      path: '/onboarding/team'
      fullPath: '/onboarding/team'
      preLoaderRoute: typeof OnboardingTeamRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/new': {
      id: '/games/new'
      path: '/games/new'
      fullPath: '/games/new'
      preLoaderRoute: typeof GamesNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/$gameId/': {
      id: '/games/$gameId/'
      path: '/games/$gameId'
      fullPath: '/games/$gameId'
      preLoaderRoute: typeof GamesGameIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  GamesNewRoute: GamesNewRoute,
  OnboardingTeamRoute: OnboardingTeamRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  RosterIndexRoute: RosterIndexRoute,
  GamesGameIdIndexRoute: GamesGameIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
